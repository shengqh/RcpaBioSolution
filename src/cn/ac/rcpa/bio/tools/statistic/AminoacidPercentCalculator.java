package cn.ac.rcpa.bio.tools.statistic;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.HashSet;
import java.util.Set;

import org.biojava.bio.proteomics.Protease;
import org.biojava.bio.seq.Sequence;
import org.biojava.bio.seq.SequenceIterator;

import cn.ac.rcpa.bio.tools.ISequenceValidator;
import cn.ac.rcpa.bio.tools.ProteaseDigestor;
import cn.ac.rcpa.bio.tools.SequenceValidatorFactory;
import cn.ac.rcpa.bio.utils.SequenceUtils;

/**
 * <p>
 * Title: Aminoacid Percent Calculator
 * </p>
 * 
 * <p>
 * Description: Calculate how much proteins contain special amino acid in
 * assigned database, and calculate how much peptides generated by special
 * protease contain that amino acid
 * </p>
 * 
 * <p>
 * Copyright: Copyright (c) 2005
 * </p>
 * 
 * <p>
 * Company: RCPA.SIBS.AC.CN
 * </p>
 * 
 * @author Sheng QuanHu (qhsheng@sibs.ac.cn / shengqh@gmail.com)
 * @version 1.0
 */
public class AminoacidPercentCalculator {
	public AminoacidPercentCalculator() {
	}

	public static void main(String[] args) throws Exception {
		File databaseFile = new File("D:/database/LAI_ORF_AA.fasta");
		final ISequenceValidator validator = SequenceValidatorFactory
				.getLengthValidator(5, 30);
		final Protease protease = Protease.getProteaseByName("Trypsin");
		final Character aminoacid = 'L';
		final int maxMissedCleavage = 0;
		final ProteaseDigestor digestor = new ProteaseDigestor(protease,
				maxMissedCleavage, validator);

		Set<String> totalPeptides = new HashSet<String>();

		SequenceIterator seqi = SequenceUtils.readFastaProtein(new BufferedReader(
				new FileReader(databaseFile)));
		int icount = 0;
		int iSequenceCount = 0;
		while (seqi.hasNext()) {
			icount++;
			if (icount % 1000 == 0) {
				System.out.println("Digesting " + icount);
			}

			Sequence seq = seqi.nextSequence();
			if (-1 != seq.seqString().indexOf(aminoacid)) {
				iSequenceCount++;
			}

			totalPeptides.addAll(digestor.digest(seq));
		}
		seqi = null;
		System.out.println("\nTotal protein = " + icount);
		System.out
				.println("Protein contains " + aminoacid + " = " + iSequenceCount);

		int iPeptideCount = 0;
		for (String peptide : totalPeptides) {
			if (-1 != peptide.indexOf(aminoacid)) {
				iPeptideCount++;
			}
		}

		System.out.println("Total peptide = " + totalPeptides.size());
		System.out.println("Peptide contains " + aminoacid + " = " + iPeptideCount);
	}
}
